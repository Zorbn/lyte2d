Namespace lyte_core: 
    Doc lyte_core namespace. Direct API mappings to C library.
    Function quit: 
        Doc Quit the application by closing the window.
    Function cls: 
        Arg r: 
            Type double
        Arg g: 
            Type double
        Arg b: 
            Type double
        Arg a: 
            Type double
        Doc Clear the screen or current canvas if one is used.
    Function set_color: 
        Arg r: 
            Type double
        Arg g: 
            Type double
        Arg b: 
            Type double
        Arg a: 
            Type double
        Doc Set the foreground color to be used in the drawing operations.
    Function reset_color: 
        Doc Reset the foreground color to its default value.
    Function draw_point: 
        Arg x: 
            Type double
        Arg y: 
            Type double
        Doc Draw a point.
    Function draw_line: 
        Arg x1: 
            Type double
        Arg y1: 
            Type double
        Arg x2: 
            Type double
        Arg y2: 
            Type double
        Doc Draw a line
    Function draw_triangle: 
        Arg ax: 
            Type double
        Arg ay: 
            Type double
        Arg bx: 
            Type double
        Arg by: 
            Type double
        Arg cx: 
            Type double
        Arg cy: 
            Type double
        Doc Draw a filled triangle
    Function draw_triangle_line: 
        Arg ax: 
            Type double
        Arg ay: 
            Type double
        Arg bx: 
            Type double
        Arg by: 
            Type double
        Arg cx: 
            Type double
        Arg cy: 
            Type double
        Doc Draw a triangle border
    Function draw_rect: 
        Arg dest_x: 
            Type double
        Arg dest_y: 
            Type double
        Arg rect_width: 
            Type double
        Arg rect_height: 
            Type double
        Doc Draw a filled rectangle.
    Function draw_rect_line: 
        Arg dest_x: 
            Type double
        Arg dest_y: 
            Type double
        Arg rect_width: 
            Type double
        Arg rect_height: 
            Type double
        Doc Draw a rectangle border.
    Function draw_circle: 
        Arg dest_x: 
            Type double
        Arg dest_y: 
            Type double
        Arg radius: 
            Type double
        Doc Draw a filled circle.
    Function draw_circle_line: 
        Arg dest_x: 
            Type double
        Arg dest_y: 
            Type double
        Arg radius: 
            Type double
        Doc Draw a circle border.
    Function draw_ellipse: 
        Arg dest_x: 
            Type double
        Arg dest_y: 
            Type double
        Arg radius_x: 
            Type double
        Arg radius_y: 
            Type double
        Doc Draw a filled ellipse.
    Function draw_ellipse_line: 
        Arg dest_x: 
            Type double
        Arg dest_y: 
            Type double
        Arg radius_x: 
            Type double
        Arg radius_y: 
            Type double
        Doc Draw an ellipse border.
    Function image_cleanup: 
        Arg image: 
            Type pointer
        Doc Free Image resources
        Impl lua
    Function image_load: 
        Arg image_path: 
            Type string
        Ret val: 
            Type pointer
        Doc Load the image specified in the path.
        Impl lua
    Function image_draw: 
        Arg image: 
            Type pointer
        Arg dest_x: 
            Type double
        Arg dest_y: 
            Type double
        Doc Draw an image.
        Impl lua
    Function image_draw_rect: 
        Arg image: 
            Type pointer
        Arg dest_x: 
            Type double
        Arg dest_y: 
            Type double
        Arg src_x: 
            Type double
        Arg src_y: 
            Type double
        Arg rect_width: 
            Type double
        Arg rect_height: 
            Type double
        Doc Draw a rectangular area from the image.
        Impl lua
    Function image_get_width: 
        Arg image: 
            Type pointer
        Ret val: 
            Type int
        Doc Get the width of the image.
        Impl lua
    Function image_get_height: 
        Arg image: 
            Type pointer
        Ret val: 
            Type int
        Doc Get the height of the image.
        Impl lua
    Function image_new_canvas: 
        Arg width: 
            Type int
        Arg height: 
            Type int
        Ret val: 
            Type pointer
        Doc Create a canvas image with given width and height.
        Impl lua
    Function image_set_canvas: 
        Arg canvas_image: 
            Type pointer
        Doc Set the effective canvas image. All draw operations will go to this canvas until it's reset.
        Impl lua
    Function reset_canvas: 
        Doc Reset the drawing target, back to screen.
    Function image_is_canvas: 
        Arg image: 
            Type pointer
        Ret val: 
            Type bool
        Doc Check if the image was created as a canvas.
        Impl lua
    Function imagebatch_cleanup: 
        Arg imagebatch: 
            Type pointer
        Doc Free ImageBatch resources
        Impl lua
    Function imagebatch_new: 
        Arg image: 
            Type pointer
        Ret val: 
            Type pointer
        Doc Create an image batch
        Impl lua
    Function imagebatch_reset: 
        Arg imagebatch: 
            Type pointer
        Doc Reset the image batch, remove all added rects.
        Impl lua
    Function imagebatch_add_rect: 
        Arg imagebatch: 
            Type pointer
        Arg dest_x: 
            Type double
        Arg dest_y: 
            Type double
        Arg dest_width: 
            Type double
        Arg dest_height: 
            Type double
        Arg src_x: 
            Type double
        Arg src_y: 
            Type double
        Arg src_width: 
            Type double
        Arg src_height: 
            Type double
        Doc Add a recta to the image batch (from it's initial image).
        Impl lua
    Function imagebatch_get_rect_count: 
        Arg imagebatch: 
            Type pointer
        Ret val: 
            Type int
        Doc Get the number of rects in the image batch.
        Impl lua
    Function imagebatch_draw: 
        Arg imagebatch: 
            Type pointer
        Doc Draw the image batch.
        Impl lua
    Function font_cleanup: 
        Arg font: 
            Type pointer
        Doc Free Font resources
        Impl lua
    Function font_load: 
        Arg font_path: 
            Type string
        Arg size: 
            Type double
        Ret val: 
            Type pointer
        Doc Load the font specified in the path, and set the initial size.
        Impl lua
    Function font_set: 
        Arg font: 
            Type pointer
        Doc Set the effective font to be used in the drawing operations.
        Impl lua
    Function draw_text: 
        Arg text: 
            Type string
        Arg dest_x: 
            Type double
        Arg dest_y: 
            Type double
        Doc Draw a text line.
    Function get_text_width: 
        Arg text: 
            Type string
        Ret val: 
            Type int
        Doc Get the width of the given text line.
    Function get_text_height: 
        Arg text: 
            Type string
        Ret val: 
            Type int
        Doc Get the height of the given text line.
    Function get_monitor_count: 
        Ret val: 
            Type int
        Doc Get the number of currently connected monitors.
    Function get_monitor_name: 
        Arg index: 
            Type int
        Ret val: 
            Type string
        Doc Get the name of the monitor at the index
    Function get_monitor_width: 
        Arg index: 
            Type int
        Ret val: 
            Type int
        Doc Get the width of the monitor at the index
    Function get_monitor_height: 
        Arg index: 
            Type int
        Ret val: 
            Type int
        Doc Get the height of the monitor at the index
    Function set_window_monitor: 
        Arg index: 
            Type int
        Doc  Set the window's initial monitor to the indexed value. Must be set before the window is opened.
    Function set_window_resizable: 
        Arg resizable: 
            Type bool
        Doc  Set the window resizable flag to the given value. Must be set before the window is opened.
    Function set_window_minsize: 
        Arg width: 
            Type int
        Arg height: 
            Type int
        Doc Set the window's minimum possible size.
    Function set_window_size: 
        Arg width: 
            Type int
        Arg height: 
            Type int
        Doc Set the window's size.
    Function get_window_width: 
        Ret val: 
            Type int
            Doc Width of the window in pixels
        Doc Get the width of the window.
    Function get_window_height: 
        Ret val: 
            Type int
            Doc Height of the window in pixels
        Doc Get the height of the window.
    Function set_window_position: 
        Arg x: 
            Type int
        Arg y: 
            Type int
        Doc Set the window's position.
    Function set_fullscreen: 
        Arg fullscreen: 
            Type bool
        Doc Set the window to fullscreen, or windowed mode.
    Function is_fullscreen: 
        Ret val: 
            Type bool
        Doc Check if the window is set to fullscreen.
    Function set_window_title: 
        Arg title: 
            Type string
        Doc Set the window's title.
    Function set_window_vsync: 
        Arg vsync: 
            Type bool
        Doc Set the window vsync flag to the given value.
    Function is_window_vsync: 
        Ret val: 
            Type bool
        Doc Check if the window vsync flag is set.
    Function set_window_icon_file: 
        Arg icon_path: 
            Type string
        Doc Set the window icon.
    Function set_window_margins: 
        Arg left: 
            Type int
        Arg right: 
            Type int
        Arg top: 
            Type int
        Arg bottom: 
            Type int
        Doc Set the window margins. Margins are ignored and no drawing can be made there..
    Function set_window_paddings: 
        Arg left: 
            Type int
        Arg right: 
            Type int
        Arg top: 
            Type int
        Arg bottom: 
            Type int
        Doc Set the window paddings. Paddings are can be drawn on.
    Function is_key_down: 
        Arg key: 
            Type KeyboardKey
        Ret val: 
            Type bool
        Doc Check if the given key is down.
    Function is_key_pressed: 
        Arg key: 
            Type KeyboardKey
        Ret val: 
            Type bool
        Doc Check if the given key is pressed.
    Function is_key_released: 
        Arg key: 
            Type KeyboardKey
        Ret val: 
            Type bool
        Doc Check if the given key is released.
    Function is_key_repeat: 
        Arg key: 
            Type KeyboardKey
        Ret val: 
            Type bool
        Doc Check if the given key is repeated.
    Function is_mouse_down: 
        Arg mouse_button: 
            Type MouseButton
        Ret val: 
            Type bool
        Doc Check if the given mouse button is down.
    Function is_mouse_pressed: 
        Arg mouse_button: 
            Type MouseButton
        Ret val: 
            Type bool
        Doc Check if the given mouse button is pressed.
    Function is_mouse_released: 
        Arg mouse_button: 
            Type MouseButton
        Ret val: 
            Type bool
        Doc Check if the given mouse button is released.
    Function get_mouse_x: 
        Ret val: 
            Type int
        Doc Get the mouse x position.
    Function get_mouse_y: 
        Ret val: 
            Type int
        Doc Get the mouse y position.
    Function get_gamepad_count: 
        Ret val: 
            Type int
        Doc Get the number of gamepads.
    Function get_gamepad_name: 
        Arg index: 
            Type int
        Ret val: 
            Type string
        Doc Get the name of the gamepad at the given index.
    Function is_gamepad_down: 
        Arg index: 
            Type int
        Arg gamepad_button: 
            Type GamepadButton
        Ret val: 
            Type bool
        Doc Check if the given button of the gamepad at the given index is down.
    Function is_gamepad_pressed: 
        Arg index: 
            Type int
        Arg gamepad_button: 
            Type GamepadButton
        Ret val: 
            Type bool
        Doc Check if the given button of the gamepad at the given index is pressed.
    Function is_gamepad_released: 
        Arg index: 
            Type int
        Arg gamepad_button: 
            Type GamepadButton
        Ret val: 
            Type bool
        Doc Check if the given button of the gamepad at the given index is released.
    Function get_gamepad_axis: 
        Arg index: 
            Type int
        Arg gamepad_axis: 
            Type GamepadAxis
        Ret val: 
            Type double
        Doc Get the given axis of the gamepad at the given index.
    Function set_mastervolume: 
        Arg mastervolume: 
            Type double
        Doc Set the master volume.
    Function get_mastervolume: 
        Ret val: 
            Type double
        Doc Get the master volume.
    Function music_cleanup: 
        Arg music: 
            Type pointer
        Doc Free Music resources
        Impl lua
    Function music_load: 
        Arg music_path: 
            Type string
        Ret val: 
            Type pointer
        Doc Load the music specified in the path.
        Impl lua
    Function music_play: 
        Arg music: 
            Type pointer
        Doc Play the music.
        Impl lua
    Function music_pause: 
        Arg music: 
            Type pointer
        Doc Pause the music.
        Impl lua
    Function music_resume: 
        Arg music: 
            Type pointer
        Doc Resume the music.
        Impl lua
    Function music_stop: 
        Arg music: 
            Type pointer
        Doc Stop the music.
        Impl lua
    Function music_is_playing: 
        Arg music: 
            Type pointer
        Ret val: 
            Type bool
        Doc Check if the given music is playing.
        Impl lua
    Function music_get_length: 
        Arg music: 
            Type pointer
        Ret val: 
            Type double
        Doc Get the length of the given music object in seconds.
        Impl lua
    Function music_get_length_played: 
        Arg music: 
            Type pointer
        Ret val: 
            Type double
        Doc Get the already played length of the given music object in seconds.
        Impl lua
    Function music_seek: 
        Arg music: 
            Type pointer
        Arg secs: 
            Type double
        Doc Move the music time played to the given value.
        Impl lua
    Function music_set_volume: 
        Arg music: 
            Type pointer
        Arg volume: 
            Type double
        Doc Set the volume of the given music object.
        Impl lua
    Function music_set_pan: 
        Arg music: 
            Type pointer
        Arg pan: 
            Type double
        Doc Set the pan of the given music object.
        Impl lua
    Function music_set_pitch: 
        Arg music: 
            Type pointer
        Arg pitch: 
            Type double
        Doc Set the pitch of the given music object.
        Impl lua
    Function music_get_volume: 
        Arg music: 
            Type pointer
        Ret val: 
            Type double
        Doc Get the volume of the given music object.
        Impl lua
    Function music_get_pan: 
        Arg music: 
            Type pointer
        Ret val: 
            Type double
        Doc Get the pan of the given music object.
        Impl lua
    Function music_get_pitch: 
        Arg music: 
            Type pointer
        Ret val: 
            Type double
        Doc Get the pitch of the given music object.
        Impl lua
    Function sound_cleanup: 
        Arg sound: 
            Type pointer
        Doc Free Sound resources
        Impl lua
    Function sound_load: 
        Arg sound_path: 
            Type string
        Ret val: 
            Type pointer
        Doc Load the sound specified in the path.
        Impl lua
    Function sound_clone: 
        Arg orig: 
            Type pointer
        Ret val: 
            Type pointer
        Doc Clone the sound specified in the path.
        Impl lua
    Function sound_play: 
        Arg sound: 
            Type pointer
        Doc Play the sound.
        Impl lua
    Function sound_pause: 
        Arg sound: 
            Type pointer
        Doc Pause the sound.
        Impl lua
    Function sound_resume: 
        Arg sound: 
            Type pointer
        Doc Resume the sound.
        Impl lua
    Function sound_stop: 
        Arg sound: 
            Type pointer
        Doc Stop the sound.
        Impl lua
    Function sound_is_playing: 
        Arg sound: 
            Type pointer
        Ret val: 
            Type bool
        Doc Check if the given sound is playing.
        Impl lua
    Function sound_set_volume: 
        Arg sound: 
            Type pointer
        Arg volume: 
            Type double
        Doc Set the volume of the given sound object.
        Impl lua
    Function sound_set_pan: 
        Arg sound: 
            Type pointer
        Arg pan: 
            Type double
        Doc Set the pan of the given sound object.
        Impl lua
    Function sound_set_pitch: 
        Arg sound: 
            Type pointer
        Arg pitch: 
            Type double
        Doc Set the pitch of the given sound object.
        Impl lua
    Function sound_get_volume: 
        Arg sound: 
            Type pointer
        Ret val: 
            Type double
        Doc Get the volume of the given sound object.
    Function sound_get_pan: 
        Arg sound: 
            Type pointer
        Ret val: 
            Type double
        Doc Get the pan of the given sound object.
        Impl lua
    Function sound_get_pitch: 
        Arg sound: 
            Type pointer
        Ret val: 
            Type double
        Doc Get the pitch of the given sound object.
        Impl lua
    Function load_textfile: 
        Arg file_path: 
            Type string
        Ret val: 
            Type string
        Doc Load the file in the path.
    Function save_textfile: 
        Arg file_path: 
            Type string
        Arg data: 
            Type string
        Doc Append the text to the file in the path. Override if the file exists. Create if it doesn't exist.
    Function save_textfile_append: 
        Arg file_path: 
            Type string
        Arg data: 
            Type string
        Doc Append the text to the file in the path. Append at the end if the file exists. Create if it doesn't exist.
    Function push_matrix: 
        Doc Push the transform matrix.
    Function pop_matrix: 
        Doc Pop the transform matrix.
    Function reset_matrix: 
        Doc Reset the transformation matrix (load identity matrix.)
    Function translate: 
        Arg delta_x: 
            Type double
        Arg delta_y: 
            Type double
        Doc Apply translation (changes transform matrix.)
    Function rotate: 
        Arg angle: 
            Type double
        Doc Apply rotation (changes transform matrix.)
    Function rotate_at: 
        Arg angle: 
            Type double
        Arg x: 
            Type double
        Arg y: 
            Type double
        Doc Apply rotation at the given location (changes transform matrix.)
    Function scale: 
        Arg scale_x: 
            Type double
        Arg scale_y: 
            Type double
        Doc Apply scaling (changes transform matrix.)
    Function scale_at: 
        Arg scale_x: 
            Type double
        Arg scale_y: 
            Type double
        Arg x: 
            Type double
        Arg y: 
            Type double
        Doc Apply scaling at the given location (changes transform matrix.)
    Function set_default_blendmode: 
        Arg blendmode: 
            Type BlendMode
        Doc Set the default blendmode.
    Function set_blendmode: 
        Arg blendmode: 
            Type BlendMode
        Doc Set the effective blendmode.
    Function reset_blendmode: 
        Doc Reset the blendmode value to its default value.
    Function set_default_filtermode: 
        Arg filtermode: 
            Type FilterMode
        Doc Set the default filtermode.
    Function set_filtermode: 
        Arg filtermode: 
            Type FilterMode
        Doc Set the effective filtermode.
    Function reset_filtermode: 
        Doc Reset the filtermode value to its default value.
    Function shaderbuilder_cleanup: 
        Arg shaderbuilder: 
            Type pointer
        Doc Free ShaderBuilder resources
        Impl lua
    Function shaderbuilder_new: 
        Ret val: 
            Type pointer
        Doc Create a ShaderBuilder object.
        Impl lua
    Function shaderbuilder_uniform: 
        Arg shaderbuilder: 
            Type pointer
        Arg uniform_name: 
            Type string
        Arg uniform_type: 
            Type UniformType
        Doc Add uniform definition to the shaderbuilder
        Impl lua
    Function shaderbuilder_vertex: 
        Arg shaderbuilder: 
            Type pointer
        Arg vertex_code: 
            Type string
        Doc Add vertex code to the shaderbuilder
        Impl lua
    Function shaderbuilder_fragment: 
        Arg shaderbuilder: 
            Type pointer
        Arg fragment_code: 
            Type string
        Doc Add fragment to the shaderbuilder
        Impl lua
    Function shaderbuilder_build: 
        Arg shaderbuilder: 
            Type pointer
        Ret shader: 
            Type pointer
        Doc Add fragment to the shaderbuilder
        Impl lua
    Function shader_cleanup: 
        Arg shader: 
            Type pointer
        Doc Free Shader resources
        Impl lua
    Function shader_set: 
        Arg shader: 
            Type pointer
        Doc Set the custom shader and use it for consequent calls.
        Impl lua
    Function reset_shader: 
        Doc Reset the shader, back to framework defaults.
    Function shader_set_uniform_float: 
        Arg shader: 
            Type pointer
        Arg uniform_name: 
            Type string
        Arg uniform_value: 
            Type float
        Doc Set the specified uniform.
        Impl lua
    Function shader_set_uniform_floatvec4: 
        Arg shader: 
            Type pointer
        Arg uniform_name: 
            Type string
        Arg uniform_value: 
            Type FloatVec4
        Doc Set the specified uniform.
        Impl lua
    Function shader_set_uniform_image: 
        Arg shader: 
            Type pointer
        Arg uniform_name: 
            Type string
        Arg uniform_value: 
            Type pointer
        Doc Set the specified uniform.
        Impl lua
    Function shader_reset_uniform: 
        Arg shader: 
            Type pointer
        Arg uniform_name: 
            Type string
        Doc Reset the specified uniform.
        Impl lua
    List FloatVec4: 
        Type float
        MaxCount 4
        Doc Float values
    Enum UniformType: 
        (string) _invalid
        (string) float
        (string) vec2
        (string) vec3
        (string) vec4
        (string) int
        (string) ivec2
        (string) ivec3
        (string) ivec4
        (string) mat4
        (string) sampler2D
        Doc Acceptable uniformtype values.
    Enum BlendMode: 
        (string) none
        (string) blend
        (string) add
        (string) mod
        (string) mul
        Doc Acceptable blendmode values.
    Enum FilterMode: 
        (string) _invalid
        (string) nearest
        (string) linear
        Doc Acceptable filtermode values.
    Enum GamepadAxis: 
        (string) left_x
        (string) left_y
        (string) right_x
        (string) right_y
        (string) left_trigger
        (string) right_trigger
        Doc Acceptable gamepadaxis values.
    Enum GamepadButton: 
        (string) pad_a
        (string) pad_b
        (string) pad_x
        (string) pad_y
        (string) left_bumper
        (string) right_bumper
        (string) back
        (string) start
        (string) guide
        (string) left_thumb
        (string) right_thumb
        (string) dpad_up
        (string) dpad_right
        (string) dpad_down
        (string) dpad_left
        Doc Acceptable gamepadbutton values.
    Enum MouseButton: 
        (string) mb1
        (string) mb2
        (string) mb3
        (string) mb4
        (string) mb5
        (string) mb6
        (string) mb7
        (string) mb8
        Doc Acceptable mousebutton values.
    Enum KeyboardKey: 
        (string) space
        (string) '
        (string) ,
        (string) -
        (string) .
        (string) /
        (string) 0
        (string) 1
        (string) 2
        (string) 3
        (string) 4
        (string) 5
        (string) 6
        (string) 7
        (string) 8
        (string) 9
        (string) ;
        (string) =
        (string) a
        (string) b
        (string) c
        (string) d
        (string) e
        (string) f
        (string) g
        (string) h
        (string) i
        (string) j
        (string) k
        (string) l
        (string) m
        (string) n
        (string) o
        (string) p
        (string) q
        (string) r
        (string) s
        (string) t
        (string) u
        (string) v
        (string) w
        (string) x
        (string) y
        (string) z
        (string) [
        (string) \
        (string) ]
        (string) `
        (string) world_1
        (string) world_2
        (string) escape
        (string) enter
        (string) tab
        (string) backspace
        (string) insert
        (string) delete
        (string) right
        (string) left
        (string) down
        (string) up
        (string) page_up
        (string) page_down
        (string) home
        (string) end
        (string) caps_lock
        (string) scroll_lock
        (string) num_lock
        (string) print_screen
        (string) pause
        (string) f1
        (string) f2
        (string) f3
        (string) f4
        (string) f5
        (string) f6
        (string) f7
        (string) f8
        (string) f9
        (string) f10
        (string) f11
        (string) f12
        (string) f13
        (string) f14
        (string) f15
        (string) f16
        (string) f17
        (string) f18
        (string) f19
        (string) f20
        (string) f21
        (string) f22
        (string) f23
        (string) f24
        (string) f25
        (string) kp_0
        (string) kp_1
        (string) kp_2
        (string) kp_3
        (string) kp_4
        (string) kp_5
        (string) kp_6
        (string) kp_7
        (string) kp_8
        (string) kp_9
        (string) kp_decimal
        (string) kp_divide
        (string) kp_multiply
        (string) kp_subtract
        (string) kp_add
        (string) kp_enter
        (string) kp_equal
        (string) left_shift
        (string) left_control
        (string) left_alt
        (string) left_super
        (string) right_shift
        (string) right_control
        (string) right_alt
        (string) right_super
        (string) menu
        Doc Acceptable keyboardkey values.


